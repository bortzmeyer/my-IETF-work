<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc1034 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY rfc1035 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY rfc2119 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc2181 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY rfc4033 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY rfc5246 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">
<!ENTITY rfc5936 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5936.xml">
<!ENTITY rfc6347 SYSTEM
"http://xml.resource.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY rfc6973 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6973.xml">
<!ENTITY I-D.vandergaast-edns-client-subnet SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.vandergaast-edns-client-subnet">
<!ENTITY I-D.ietf-dprive-problem-statement SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-dprive-problem-statement.xml">
<!ENTITY I-D.vixie-dnsext-resimprove SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.vixie-dnsext-resimprove.xml">
<!ENTITY I-D.wkumari-dnsop-hammer SYSTEM
"http://xml.resource.org/public/rfc/bibxml3/reference.I-D.wkumari-dnsop-hammer.xml">
]>

<rfc docName="draft-ietf-dnsop-qname-minimisation-01BETA"
     category="exp" ipr="trust200902">
<?rfc toc="yes"?>
<?rfc strict="yes"?> 
<front>
<title abbrev="Qname minimisation">DNS query name minimisation to improve privacy</title>
<author fullname="Stephane Bortzmeyer" initials="S." surname="Bortzmeyer">
<organization>AFNIC</organization>
<address><postal><street>1, rue Stephenson</street><code>78180</code><city>Montigny-le-Bretonneux</city><country>France</country></postal> <phone>+33 1 39 30 83 46</phone><email>bortzmeyer+ietf@nic.fr</email><uri>http://www.afnic.fr/</uri></address>
</author>
<date month="TODO" year="2015"/>
<workgroup>Domain Name System Operations (dnsop) Working Group</workgroup>
<abstract>
<t>This document describes one of the techniques that could be used to
improve DNS privacy (see <xref
target="I-D.ietf-dprive-problem-statement"/>), a technique called "qname
minimisation".</t>
<t>Discussions of the document should take place on the
DNSOP working group mailing list <xref target="dnsop"/>.</t>
</abstract>
</front>

<middle>
<section title="Introduction and background">
<t>The problem statement is exposed in <xref
target="I-D.ietf-dprive-problem-statement"/> TODO: add a reference to the specific section when ietf-dprive-problem-statement will be published as RFC. The terminology ("qname",
"resolver", etc)
is also defined in this companion document. This specific solution is not intended to fully solve the DNS privacy problem;
instead, it should be viewed as one tool amongst many.</t>
<t>It follows the principle explained in section 6.1 of <xref
target="RFC6973"/>: the less data you send out, the less privacy
problems you'll get.</t>
</section>

<section title="Qname minimisation">
<t>The idea is to minimise the amount of data sent
from the DNS resolver. When a resolver receives the query "What is the
AAAA record for www.example.com?", it sends to the root (assuming a
cold resolver, whose cache is empty) the very same question. Sending
"What are the NS records for .com?" would be sufficient (since
it will be the answer from the root anyway). To do so would be
compatible with the current DNS system and therefore could be
easily deployable, since it is an unilateral change to the
resolvers, it does not change the protocol. Because of that, resolver implementers may do qname minmisation in slightly different
ways.</t>
<t>If "minimisation" is too long, you can write it "m10n".</t>
<t>To do such minimisation, the resolver needs to know the zone cut <xref
target="RFC2181"/>.  Zone cuts do not necessarily exist at every label
boundary.
If we take the name www.foo.bar.example, it is possible that
there is a zone cut between "foo" and "bar" but not between "bar" and
"example"<!-- Real examples today are www.economie.gouv.fr or
www.janet.ac.uk -->. 
So, assuming the resolver already knows
the name servers of .example, when it receives the query "What is the
AAAA record of www.foo.bar.example", it does not always know if the
request should be sent to the name servers of bar.example or to those
of example. <xref
target="RFC2181"/> suggests a method to find the zone cut (section 6), so
resolvers may try it.</t>
<t>Note that DNSSEC-validating resolvers already have access to this information, since they
have to find the zone cut (the DNSKEY record set is just below, the DS
record set just above).</t>
<t>Minimising the amount of data sent also, in part, addresses the
case of a wire sniffer as well the case of privacy invasion by the
servers.</t>
<t>One should note that the behaviour suggested here
(minimising the amount of data sent in qnames) is NOT forbidden by the <xref
target="RFC1034"/> (section 5.3.3) or <xref target="RFC1035"/>
(section 7.2). Sending the full qname to the authoritative name server
is a tradition, not a protocol requirment. This tradition comes<xref target="mockapetris-history"/> from a desire to
optimize the number of requests, when the same name server is
authoritative for many zones in a given name (something which was more
common in the old days, where the same name servers served .com and
the root) or when the same name server is both recursive and authoritative (something which is strongly discouraged now). Whatever the merits of this choice at this time, the DNS is quite
different now.</t>
<t>As mentioned before, there are several ways to implement qname minimisation. Two main strategies are
the aggressive one and the lazy one. In the aggressive one, the
resolver only sends NS queries as long as it does not know the zone
cuts. This is the safest, from a privacy point of view. The lazy way
"piggybacks" on the traditional resolution code. It sends traditional
full qnames and learn the zone cuts from the referrals received, then
switching to NS queries. This
leaks more data but probably requires less changes in the existing resolver codebase.</t>
</section>

<section title="Operational considerations">
<t>The administrators of the forwarders, and of the authoritative name
servers, will get less data, which will reduce the utility of the
statistics they can produce (such as the percentage of the various
qtypes). On the other hand, it may decrease their legal
responsibility.</t>
<t>Some broken name servers do not react properly to qtype=NS
requests. For instance, some authoritative name servers embedded in load balancers reply properly to A queries but send REFUSED to NS queries.
REMOVE THIS SENTENCE BEFORE PUBLICATION: As an example of today, look at www.ratp.fr (not ratp.fr). This behaviour is a gross protocol violation, and there
is no need to stop improving the DNS because of such
brokenness. However, qname minimisation may still work with such
domains since they are only leaf domains (no need to send them NS
requests). Such setup breaks more than just qname minimisation. It breaks
negative answers, since the servers don't return the correct SOA, and
it also breaks anything dependent upon NS and SOA records existing at
the top of the zone. 
</t>
<t>A problem can also appear when a name server does not react
properly to ENT (Empty Non-Terminals). If ent.example.com has no
resource records but foobar.ent.example.com does, then ent.example.com
is an ENT. A query, whatever the qtype, for ent.example.com must
return NODATA (NOERROR / ANSWER: 0). However, some broken name servers
return NXDOMAIN for ENTs. REMOVE THIS SENTENCE BEFORE PUBLICATION: As
an example of today, look at com.akadns.net or www.upenn.edu with its
delegations to Akamai. If a resolver queries only
foobar.ent.example.com, everything will be OK but, if it implements
qname minimisation, it may query ent.example.com and get a
NXDOMAIN. See also section 3 of <xref
target="I-D.vixie-dnsext-resimprove"/> for the other bad consequences
of this brokenness.</t>
<t>Another way to deal with such broken name servers would be to try
with A requests (A being chosen because it is the most common and
hence a qtype which will be always accepted, while a qtype NS may
ruffle the feathers of some middleboxes). Instead of querying name
servers with a query "NS example.com", we could use "A
_.example.com" and see if we get a referral.</t>
<t>Other strange and illegal practices may pose a problem: for
instance, there is a common DNS anti-pattern used by low-end web hosters that also
do DNS hosting that exploits the fact that the DNS protocol (pre-DNSSEC)
allows certain serious misconfigurations, such as parent and child zones
disagreeing on the location of a zone cut.  Basically, they have a
single zone with wildcards like:
<figure>
<artwork>
*.example.          60  IN  A   192.0.2.6
</artwork>
</figure>
(It is not known why they don't just wildcard all of "*." and be done with
it.)</t>
<t>This lets them turn up tons of web hosting customers without having to
configure thousands of individual zones on their nameservers.  They just
tell the prospective customer to point their NS records at their
nameservers, and the Web hoster doesn't have to provision anything in
order to make the customer's domain resolve.</t>
<t>Qname minimisation can decrease performance in some cases, for
instance for a deep domain name
(like www.host.group.department.example.com where
host.group.department.example.com is hosted on example.com's name
servers). For such a name, a cold resolver will, depending how qname
minimisation is implemented, send more queries. Once warm, there will
be no difference with a traditional resolver. A possible solution is
to always use the traditional algorithm when the cache is cold and
then to move to qname minimisation. This will decrease the privacy a
bit but will guarantee no degradation of performance.</t>
<t>Another useful optimisation may be, in the spirit of the HAMMER idea <xref target="I-D.wkumari-dnsop-hammer"/> to probe in advance for the introduction of zone
cuts where none previously existed (i.e. confirm their continued absence,
or discover them.)</t>
</section>

<section title="Performance implications">
<t>The main goal of qname minimisation is to improve privacy by
sending less data. However, it may have other advantages. For
instance, if a root name server receives a
query from some resolver for A.CORP followed by B.CORP
followed by C.CORP, the result will be three NXDOMAINs, since .CORP does
not exist in the root zone. Under query name minimisation, the root name servers would hear only one
question (for .CORP itself) to which they could answer NXDOMAIN, thus
opening up a negative caching opportunity in which the full resolver
could know a priori that neither B.CORP or C.CORP could exist. Thus in
this common case the total number of upstream queries under qname minimisation would be counter-intuitively less than the number of
queries under the traditional iteration (as described in the DNS standard).</t>
<t>Qname minimisation may also improve look-up performance for TLD operators. 
For a typical TLD, delegation-only, and with delegations just under the TLD, a 2-label QNAME query is optimal for finding the
delegation owner name.</t>
</section>

<section title="Security considerations">
<t><cref>Consequences of qname minimisation for phantom domains
(domains deleted on the parent but still served by original name
servers)?</cref></t>
<t>No security consequence (besides privacy improvment) is known at this time.</t>
</section>

<section title="Acknowledgments">
<t>Thanks to Olaf Kolkman for the original idea although the concept
is probably <eref
target="https://lists.dns-oarc.net/pipermail/dns-operations/2010-February/005003.html">much
older</eref>. Thanks to Mark Andrews and Francis Dupont for the
interesting discussions. Thanks to Brian Dickson, Warren Kumari and David Conrad for remarks and suggestions. Thanks to Mohsen
Souissi for proofreading. Thanks to Tony Finch for the zone cut
algorithm in <xref target="zonecutalgo"/>. Thanks to Paul Vixie for pointing out that there are practical advantages (besides privacy) to qname m10n.
Thanks to Phillip Hallam-Baker for the
fallback on A queries, to deal with broken servers. Thanks to Robert
Edmonds for an interesting anti-pattern.</t>
</section>

</middle>

<back>

<references title='Normative References'>
&rfc1034;
&rfc1035;
&rfc6973;
&I-D.ietf-dprive-problem-statement;
</references>

<references title='Informative References'>
&rfc2181;
&I-D.wkumari-dnsop-hammer;
&I-D.vixie-dnsext-resimprove;

<reference anchor="dnsop" target="https://datatracker.ietf.org/wg/dnsop/charter/">
<front>
<title>The DNSOP working group of IETF</title>
<author fullname="IETF" surname="IETF"/>
<date month="March" year="2014"/>
<abstract>
<t>The DNS Operations Working Group will develop guidelines for the
operation of DNS software and services and for the administration
of DNS zones.</t>
</abstract>
</front>
</reference>

<reference anchor="mockapetris-history">
<front>
<title>Private discussion</title>
<author fullname="Paul Mockapetris" surname="Mockapetris" initials="P."/>
<date day="13" month="January" year="2015"/>
<abstract><t>Meeting in the AFNIC office.</t></abstract>
</front>
</reference>

</references>

<section anchor="zonecutalgo" title="An algorithm to find the zone cut">

<t>Although a validating resolver already has the logic to find the
zone cut, other resolvers may be interested by this algorithm to
follow in order to locate this cut:
<list style="empty">
<t>(0) If the query can be answered from the cache, do so, otherwise iterate
as follows:</t>
<t>(1) Find closest enclosing NS RRset in your cache. The owner of this NS
RRset will be a suffix of the QNAME - the longest suffix of any NS RRset
in the cache. Call this PARENT.</t>
<t>(2) Initialize CHILD to the same as PARENT.</t>
<t>(3) If CHILD is the same as the QNAME, resolve the original query using
PARENT's name servers, and finish.</t>
<t>(4) Otherwise, add a label from the QNAME to the start of CHILD.</t>
<t>(5) If you have a negative cache entry for the NS RRset at CHILD, go back
to step 3.</t>
<t>(6) Query for CHILD IN NS using PARENT's name servers. The response can
be:
<list style="empty">
<t>(6a) A referral. Cache the NS RRset from the authority section and go back
to step 1.</t>
<t>(6b) An authoritative answer. Cache the NS RRset from the answer section
and go back to step 1.</t>
<t>(6c) An NXDOMAIN answer. Return an NXDOMAIN answer in response to the
original query and stop.</t>
<t>(6d) A NOERROR/NODATA answer. Cache this negative answer and go back to
step 3.</t>
</list></t>
</list>
</t></section>

<!-- IPR:

https://datatracker.ietf.org/ipr/2469/
http://www.google.com/patents/EP2611116A1?cl=en Good rationale for
data minimisation. Strange idea of "false labels"; may be an
equivalent of the "A query with a label _" idea of PHB? 

Possible prior art: https://lists.dns-oarc.net/pipermail/dns-operations/2010-February/005003.html

-->

</back>

</rfc>



